name: Tests
"on":
    pull_request: {}
    push:
        branches:
            - main
jobs:
    package:
        name: Package Test
        runs-on:
            - ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - id: version
              name: Compute Version
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                PATTERN="refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)"
                if [[ ${GITHUB_REF} =~ ${PATTERN} ]]; then
                  VERSION=${BASH_REMATCH[1]}
                else
                  VERSION=$(git rev-parse --short HEAD)
                fi

                echo "::set-output name=version::${VERSION}"
                printf "Selected %s from
                  * ref: %s
                  * sha: %s
                " "${VERSION}" "${GITHUB_REF}" "${GITHUB_SHA}"
            - uses: actions/setup-go@v2
              with:
                go-version: "1.15"
            - uses: actions/cache@v2
              with:
                key: ${{ runner.os }}-go-${{ hashFiles('**/buildpack.toml') }}
                path: ${{ env.HOME }}/carton-cache
                restore-keys: ${{ runner.os }}-go-
            - name: Install Create Package
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                GO111MODULE=on go get -u -ldflags="-s -w" github.com/paketo-buildpacks/libpak/cmd/create-package
            - name: Create Package
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${INCLUDE_DEPENDENCIES+x}" ]]; then
                  create-package \
                  	--cache-location "${HOME}"/carton-cache \
                  	--destination "${HOME}"/buildpack \
                  	--include-dependencies \
                  	--version "${VERSION}"
                else
                  create-package \
                  	--destination "${HOME}"/buildpack \
                  	--version "${VERSION}"
                fi

                [[ -e package.toml ]] && cp package.toml "${HOME}"/package.toml
                printf '[buildpack]\nuri = "%s"' "${HOME}"/buildpack >> "${HOME}"/package.toml
              env:
                INCLUDE_DEPENDENCIES: "true"
                VERSION: ${{ steps.version.outputs.version }}
            - name: Install pack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                mkdir -p "${HOME}"/bin
                echo "::add-path::${HOME}/bin"

                curl \
                	--location \
                	--show-error \
                	--silent \
                	"https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
                	| tar -C "${HOME}"/bin/ -xzv pack
              env:
                PACK_VERSION: 0.13.1
            - name: Package Buildpack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${PUBLISH+x}" ]]; then
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config "${HOME}"/package.toml \
                    --publish

                  echo "::set-output name=digest::$(crane digest "${PACKAGE}:${VERSION}")"
                else
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config "${HOME}"/package.toml
                fi
              env:
                PACKAGE: test
                VERSION: ${{ steps.version.outputs.version }}
    unit:
        name: Unit Test
        runs-on:
            - ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - uses: actions/setup-go@v2
              with:
                go-version: "1.15"
            - uses: actions/cache@v2
              with:
                key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                path: ${{ env.HOME }}/go/pkg/mod
                restore-keys: ${{ runner.os }}-go-
            - name: Install richgo
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                GO111MODULE=on go get -u -ldflags="-s -w" github.com/kyoh86/richgo
            - name: Run Tests
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                richgo test ./...
              env:
                RICHGO_FORCE_COLOR: "1"
