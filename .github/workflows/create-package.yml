name: Create Package
"on":
    release:
        types:
            - published
jobs:
    create-package:
        name: Create Package
        runs-on:
            - ubuntu-latest
        steps:
            - uses: actions/checkout@v2
            - id: version
              name: Compute Version
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                PATTERN="refs/tags/v([0-9]+\.[0-9]+\.[0-9]+)"
                if [[ ${GITHUB_REF} =~ ${PATTERN} ]]; then
                  VERSION=${BASH_REMATCH[1]}
                else
                  VERSION=$(git rev-parse --short HEAD)
                fi

                echo "::set-output name=version::${VERSION}"
                printf "Selected %s from
                  * ref: %s
                  * sha: %s
                " "${VERSION}" "${GITHUB_REF}" "${GITHUB_SHA}"
            - uses: actions/setup-go@v2
              with:
                go-version: "1.15"
            - name: Install Create Package
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                GO111MODULE=on go get -u -ldflags="-s -w" github.com/paketo-buildpacks/libpak/cmd/create-package
            - name: Create Package
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${INCLUDE_DEPENDENCIES+x}" ]]; then
                  create-package \
                  	--cache-location "${HOME}"/carton-cache \
                  	--destination "${HOME}"/buildpack \
                  	--include-dependencies \
                  	--version "${VERSION}"
                else
                  create-package \
                  	--destination "${HOME}"/buildpack \
                  	--version "${VERSION}"
                fi

                [[ -e package.toml ]] && cp package.toml "${HOME}"/package.toml
                printf '[buildpack]\nuri = "%s"' "${HOME}"/buildpack >> "${HOME}"/package.toml
              env:
                VERSION: ${{ steps.version.outputs.version }}
            - name: Install Crane
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                GO111MODULE=on go get -u -ldflags="-s -w" github.com/google/go-containerregistry/cmd/crane
            - name: Install pack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                mkdir -p "${HOME}"/bin
                echo "::add-path::${HOME}/bin"

                curl \
                	--location \
                	--show-error \
                	--silent \
                	"https://github.com/buildpacks/pack/releases/download/v${PACK_VERSION}/pack-v${PACK_VERSION}-linux.tgz" \
                	| tar -C "${HOME}"/bin/ -xzv pack
              env:
                PACK_VERSION: 0.13.1
            - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
              with:
                service_account_key: ${{ secrets.JAVA_GCLOUD_SERVICE_ACCOUNT_KEY }}
            - name: Configure gcloud docker credentials
              run: gcloud auth configure-docker
            - id: package
              name: Package Buildpack
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                if [[ -n "${PUBLISH+x}" ]]; then
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config "${HOME}"/package.toml \
                    --publish

                  echo "::set-output name=digest::$(crane digest "${PACKAGE}:${VERSION}")"
                else
                  pack package-buildpack \
                    "${PACKAGE}:${VERSION}" \
                    --config "${HOME}"/package.toml
                fi
              env:
                PACKAGE: gcr.io/paketo-buildpacks/sbt
                PUBLISH: "true"
                VERSION: ${{ steps.version.outputs.version }}
            - name: Update release with digest
              run: |
                #!/usr/bin/env bash

                set -euo pipefail

                PAYLOAD=$(cat "${GITHUB_EVENT_PATH}")

                RELEASE_ID=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.id')
                RELEASE_TAG_NAME=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.tag_name')
                RELEASE_NAME=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.name')
                RELEASE_BODY=$(jq -n -r --argjson PAYLOAD "${PAYLOAD}" '$PAYLOAD.release.body')

                gh api \
                  --method PATCH \
                  "/repos/:owner/:repo/releases/${RELEASE_ID}" \
                  --field "tag_name=${RELEASE_TAG_NAME}" \
                  --field "name=${RELEASE_NAME}" \
                  --field "body=${RELEASE_BODY//<!-- DIGEST PLACEHOLDER -->/\`${DIGEST}\`}"
              env:
                DIGEST: ${{ steps.package.outputs.digest }}
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
